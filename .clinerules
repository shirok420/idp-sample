# IDP-Sample プロジェクトのClineルール

## プロジェクト概要
このリポジトリは社内の認証認可基盤をOSSベースで構築するためのアーキテクチャサンプルです。
以下のOSSコンポーネントを統合して、ゼロトラストアーキテクチャを実現します：
- Keycloak: 認証・認可基盤
- MidPoint: IDM（Identity Management）
- Kong: APIゲートウェイ

## 技術スタック
- コンテナオーケストレーション: Kubernetes
- CI/CD: GitHub Actions
- 開発環境: Docker Compose
- コード品質管理: ESLint, Prettier, husky

## Clineへの指示

### 全般
- yarnをnpmの代わりに使用してください
- Kubernetesマニフェストはベストプラクティスに従って作成してください
- ゼロトラストアーキテクチャの原則に基づいたセキュリティ設計を心がけてください
- 24/7運用を前提とした高可用性設計を考慮してください

### コード品質
- コミット前にlintとフォーマットが自動的に実行されるようhusky設定を維持してください
- VSCodeのエディタフォーマット設定を尊重してください
- プルリクエストのレビュープロセスを支援するコメントを提供してください

### OSSコンポーネント
- Keycloak、MidPoint、Kongの公式ドキュメントに基づいた設定を行ってください
- OSSリポジトリ部分には余計な差分が出ないように注意してください
- 各OSSコンポーネントの最新安定版を使用してください

### CI/CD
- GitHub Actionsを使用したリリース自動化を実装してください
- テスト、ビルド、デプロイのパイプラインを設計してください
- 環境ごと（開発、ステージング、本番）の設定差分を管理してください

### ドキュメント
- アーキテクチャ図を含む技術ドキュメントを維持してください
- 各コンポーネントの設定方法と連携方法を詳細に記述してください
- トラブルシューティングガイドを提供してください

### セキュリティ
- シークレット管理のベストプラクティスを適用してください
- 定期的なセキュリティスキャンを実施するワークフローを設計してください
- 認証情報の安全な管理方法を提案してください